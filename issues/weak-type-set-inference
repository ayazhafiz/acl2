Consider the following given by
> (genM '(CONS LEN BINARY-APPEND REPEAT) 5)
... full dump below ...
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (REPEAT A B))
                 (APPEND (APPEND B A) B))))

(IMPLIES (AND (NATP A) (TRUE-LISTP B) (TRUE-LISTP (BINARY-APPEND B A))) (EQUAL (REPEAT A (REPEAT A B)) (BINARY-APPEND (BINARY-APPEND B A) B)))

(IMPLIES (IF (NATP A) (IF (TRUE-LISTP B) (TRUE-LISTP (BINARY-APPEND B A)) 'NIL) 'NIL) (EQUAL (REPEAT A (REPEAT A B)) (BINARY-APPEND (BINARY-APPEND B A) B)))

Apparently, the type-set inferrer is not smart enough to recognize that

> (TRUE-LISTP (BINARY-APPEND B A))

is unsatisfiable when (NATP A) is true! Indeed,

> (binary-append (binary-append '(a) 3) '(a))
ACL2 Error in TOP-LEVEL:  The guard for the function call
(BINARY-APPEND X Y), which is (TRUE-LISTP X), is violated by the arguments
in the call (BINARY-APPEND '(A . 3) '(A)).
See :DOC set-guard-checking for information about suppressing this
check with (set-guard-checking :none), as recommended for new users.
To debug see :DOC print-gv, see :DOC trace, and see :DOC wet.

Despite this we have that

ACL2 !>(tyinfer** 'A '(IF (NATP A) (IF (TRUE-LISTP B) (TRUE-LISTP (BINARY-APPEND B A)) 'NIL) 'NIL))
(7 ((LEMMA (:COMPOUND-RECOGNIZER NATP-COMPOUND-RECOGNIZER))))

where

ACL2 !>(decode-type-set 7)
*TS-NON-NEGATIVE-INTEGER*

The reason is that the guard of binary-append is given by

ACL2 !>(guard 'binary-append nil (w state))
(TRUE-LISTP X)
ACL2 !>(formals 'binary-append (w state))
(X Y)

So, had we had instead `A` on the LHS of binary-append, we would have prouduced
the hypotheses

(AND (NATP A)
     (TRUE-LISTP A)
     (TRUE-LISTP (BINARY-APPEND A B)))

which is indeed marked unsatisfiable

ACL2 !>(tyinfer** 'A '(IF (NATP A) (IF (TRUE-LISTP A) (TRUE-LISTP (BINARY-APPEND A B)) 'NIL) 'NIL))
(0 ((LEMMA (:COMPOUND-RECOGNIZER NATP-COMPOUND-RECOGNIZER))))

On the other hand, if we could also try to prove the validity of the last
hypothesis given the prior hypotheses, for example via something like

ACL2 !>(prove** '(implies (if (natp a) (true-listp b) 'nil) (true-listp (binary-append b a))))
...
([ A key checkpoint while proving *1 (descended from Goal'):

Subgoal *1/2''
(IMPLIES (AND (INTEGERP A) (<= 0 A))
         (TRUE-LISTP A))

A goal of NIL, Subgoal *1/2''', has been generated!  Obviously, the
proof attempt has failed.

])

Great, indeed we have that this is unsatisfiable. Of course, had we already
started with the restriction that A is a TRUE-LISTP, we find immediately that

ACL2 !>(prove** '(implies (if (true-listp a) (true-listp b) 'nil) (true-listp (binary-append b a))))

Q.E.D.
 ((LEMMA (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND)))

as desired. So, perhaps we should throw an SMT solver in here to deal with this
issue.

~~~~~~~~~~~~~
~~~~~~~~~~~~~
~~~~~~~~~~~~~

> (genM '(CONS LEN BINARY-APPEND REPEAT) 5)
....
Given the theory (CONS LEN BINARY-APPEND REPEAT),
we generated 40354 conjectures of size left=5, right<=5.
Of these, we deemed 24045 useful.
We were able to prove 620, namely:
((EQUAL (CONS (LEN (LEN A)) B)
        (CONS (LEN (LEN B)) B))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND B A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS (REPEAT A B) C)
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) B)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) B)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) A)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A B) A)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS (REPEAT A A) C)
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS (REPEAT A A) C)
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A A) B)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS (REPEAT A A) B)
                 (APPEND (APPEND B A) B)))
 (EQUAL (CONS A (LEN (LEN B)))
        (CONS A (LEN (LEN A))))
 (EQUAL (CONS A (APPEND B C))
        (APPEND (CONS A B) C))
 (EQUAL (CONS A (APPEND B B))
        (APPEND (CONS A B) B))
 (EQUAL (CONS A (APPEND B A))
        (APPEND (CONS A B) A))
 (EQUAL (CONS A (APPEND A C))
        (APPEND (CONS A A) C))
 (EQUAL (CONS A (APPEND A B))
        (APPEND (CONS A A) B))
 (EQUAL (CONS A (APPEND A A))
        (APPEND (CONS A A) A))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND A B) C)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND C B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND C B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (CONS A (REPEAT B C))
                 (APPEND (APPEND C B) C)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B B))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B B))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B A))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (CONS A (REPEAT B A))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS A (REPEAT A C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (CONS A (REPEAT A C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS A (REPEAT A B))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (CONS A (REPEAT A B))
                 (APPEND (APPEND B A) B)))
 (EQUAL (LEN (CONS (LEN A) B))
        (LEN (CONS (LEN B) B)))
 (EQUAL (LEN (CONS (LEN A) B))
        (LEN (CONS A B)))
 (EQUAL (LEN (CONS (LEN A) B))
        (LEN (CONS B B)))
 (EQUAL (LEN (CONS (LEN A) A))
        (LEN (CONS A A)))
 (EQUAL (LEN (CONS A (LEN B)))
        (LEN (CONS A (LEN A))))
 (EQUAL (LEN (CONS A (LEN B)))
        (LEN (CONS B (LEN A))))
 (EQUAL (LEN (CONS A (LEN B)))
        (LEN (CONS B (LEN B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (CONS B A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (CONS B B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (LEN (LEN B)))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (APPEND A A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (APPEND A B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (APPEND B A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (APPEND B B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (REPEAT A A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (REPEAT A B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (REPEAT B A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (REPEAT B B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN (LEN B))))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (CONS A B)))
        (LEN (LEN B)))
 (EQUAL (LEN (LEN (CONS A A)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (CONS A A)))
        (LEN (LEN (APPEND A A))))
 (EQUAL (LEN (LEN (CONS A A)))
        (LEN (LEN (REPEAT A A))))
 (EQUAL (LEN (LEN (CONS A A)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (CONS A A)))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (LEN (LEN A))))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (LEN (LEN A))))
        (LEN (LEN (APPEND A A))))
 (EQUAL (LEN (LEN (LEN (LEN A))))
        (LEN (LEN (REPEAT A A))))
 (EQUAL (LEN (LEN (LEN (LEN A))))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (LEN (LEN A))))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (CONS A B))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (CONS B A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (CONS B B))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (LEN (LEN B)))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (APPEND A A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (APPEND B A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (APPEND B B))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (REPEAT B A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (REPEAT B B))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN (LEN B))))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (APPEND A B)))
        (LEN (LEN B)))
 (EQUAL (LEN (LEN (APPEND A A)))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (APPEND A A)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (APPEND A A)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (APPEND A A)))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (CONS A B))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (CONS B A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (CONS B B))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (LEN (LEN B)))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (APPEND B A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (APPEND B B))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (REPEAT A A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (REPEAT B A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (REPEAT B B))))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (LEN (LEN (REPEAT A B)))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (LEN (LEN (REPEAT A B)))
                 (APPEND (APPEND B A) B)))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN (LEN B))))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN A)))
 (EQUAL (LEN (LEN (REPEAT A B)))
        (LEN (LEN B)))
 (IMPLIES (NATP A)
          (EQUAL (LEN (LEN (REPEAT A B)))
                 (LEN A)))
 (EQUAL (LEN (LEN (REPEAT A A)))
        (LEN (LEN (CONS A A))))
 (EQUAL (LEN (LEN (REPEAT A A)))
        (LEN (LEN (LEN (LEN A)))))
 (EQUAL (LEN (LEN (REPEAT A A)))
        (LEN (LEN (LEN A))))
 (EQUAL (LEN (LEN (REPEAT A A)))
        (LEN (LEN A)))
 (IMPLIES (NATP A)
          (EQUAL (LEN (LEN (REPEAT A A)))
                 (LEN A)))
 (EQUAL (LEN (APPEND A (LEN B)))
        (LEN (APPEND A (LEN A))))
 (EQUAL (LEN (APPEND A (LEN B))) (LEN A))
 (EQUAL (LEN (APPEND A (LEN A))) (LEN A))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (LEN (REPEAT A (LEN B)))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (LEN (REPEAT A (LEN B)))
                 (APPEND (APPEND B A) B)))
 (EQUAL (APPEND (CONS A B) C)
        (CONS A (APPEND B C)))
 (EQUAL (APPEND (CONS A B) B)
        (CONS A (APPEND B B)))
 (EQUAL (APPEND (CONS A B) A)
        (CONS A (APPEND B A)))
 (EQUAL (APPEND (CONS A A) C)
        (CONS A (APPEND A C)))
 (EQUAL (APPEND (CONS A A) B)
        (CONS A (APPEND A B)))
 (EQUAL (APPEND (CONS A A) A)
        (CONS A (APPEND A A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B A) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B A) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B B) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B C) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B C) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS (REPEAT B C) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS A (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS B (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS C (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS C (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (CONS C (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (LEN (REPEAT B A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (LEN (REPEAT B B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (LEN (REPEAT B C)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B (LEN C)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B A) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B A) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B B) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B C) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B C) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND (REPEAT B C) C)))
 (EQUAL (APPEND (APPEND A B) C)
        (APPEND A B C))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND A (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND C (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND C (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (APPEND C (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B))
               (NATP (APPEND C B)))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT (APPEND C B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B))
               (NATP (APPEND C B)))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT (APPEND C B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B))
               (NATP (APPEND C B)))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT (APPEND C B) C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS A C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS C A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS C B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (CONS C C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN (LEN C)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND A C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND C A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND C B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (APPEND C C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT C A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT C B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (REPEAT C C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT C (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT C (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT C (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (LEN (REPEAT B C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B (LEN C))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) C)
                 (REPEAT B C)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS (REPEAT B A) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS (REPEAT B B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (CONS B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (LEN (REPEAT B A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (LEN (REPEAT B B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (REPEAT B (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (REPEAT B (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND (REPEAT B A) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND (REPEAT B B) B)))
 (EQUAL (APPEND (APPEND A B) B)
        (APPEND A B B))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (APPEND A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (CONS A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (CONS A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (CONS B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (CONS B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (LEN (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (LEN (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (APPEND A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (APPEND A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (LEN (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (LEN A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B (LEN B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) B)
                 (REPEAT B B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS (REPEAT B B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS (REPEAT B A) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (CONS A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (LEN (REPEAT B B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (LEN (REPEAT B A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (REPEAT B (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (REPEAT B (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND (REPEAT B B) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND (REPEAT B B) A)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND (REPEAT B A) B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND (REPEAT B A) A)))
 (EQUAL (APPEND (APPEND A B) A)
        (APPEND A B A))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND A (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (APPEND A (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (CONS B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (CONS B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (CONS A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (CONS A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (LEN (LEN B)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (LEN (LEN A)))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (APPEND A B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (APPEND A A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (REPEAT B B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (LEN (REPEAT B A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (LEN B))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B (LEN A))))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B B)))
 (IMPLIES (AND (TRUE-LISTP (APPEND A B)) (NATP B))
          (EQUAL (APPEND (APPEND A B) A)
                 (REPEAT B A)))
 (EQUAL (APPEND (APPEND A A) C)
        (APPEND A A C))
 (EQUAL (APPEND (APPEND A A) B)
        (APPEND A A B))
 (EQUAL (APPEND (APPEND A A) A)
        (APPEND A A A))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND B A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (TRUE-LISTP C) (NATP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A B) C)
                 (REPEAT (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) B)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) B)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (TRUE-LISTP B) (NATP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) B)
                 (REPEAT (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) A)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A B) A)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A A) C)
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A A) C)
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (TRUE-LISTP C) (NATP (APPEND C A)))
          (EQUAL (APPEND (REPEAT A A) C)
                 (REPEAT (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A A) B)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A A) B)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (TRUE-LISTP B) (NATP (APPEND B A)))
          (EQUAL (APPEND (REPEAT A A) B)
                 (REPEAT (APPEND B A) A)))
 (EQUAL (APPEND A (LEN (LEN B)))
        (APPEND A (LEN (LEN A))))
 (EQUAL (APPEND A B C)
        (APPEND (APPEND A B) C))
 (EQUAL (APPEND A B B)
        (APPEND (APPEND A B) B))
 (EQUAL (APPEND A B A)
        (APPEND (APPEND A B) A))
 (EQUAL (APPEND A A C)
        (APPEND (APPEND A A) C))
 (EQUAL (APPEND A A B)
        (APPEND (APPEND A A) B))
 (EQUAL (APPEND A A A)
        (APPEND (APPEND A A) A))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND A B) C)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND C B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND C B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (APPEND A (REPEAT B C))
                 (APPEND (APPEND C B) C)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (APPEND A (REPEAT B C))
                 (REPEAT (APPEND A B) C)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B B))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B B))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (APPEND A (REPEAT B B))
                 (REPEAT (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B A))
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND A B)))
          (EQUAL (APPEND A (REPEAT B A))
                 (APPEND (APPEND A B) A)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (APPEND A (REPEAT B A))
                 (REPEAT (APPEND A B) A)))
 (EQUAL (REPEAT (LEN (LEN A)) B)
        (REPEAT (LEN (LEN B)) B))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B A) C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B B) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B B) C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B C) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B C) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS (APPEND B C) C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS A (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS A (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS A (APPEND B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS B (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS B (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS B (APPEND B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS C (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS C (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (CONS C (APPEND B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (LEN (APPEND B A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (LEN (APPEND B B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (LEN (APPEND B C)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B (LEN C)))))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS A B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS A B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS A B) C)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS B B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS B B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS B B) C)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS C B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS C B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (CONS C B) C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B A) C)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B B) C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B C) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B C) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND B C) C)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND C B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND C B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (APPEND C B) C)))
 (IMPLIES (AND (TRUE-LISTP A) (NATP (APPEND A B)))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND (REPEAT B C) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS A B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS A C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS C A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS C B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (CONS C C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN (LEN C)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND A B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND A B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND A B C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B A A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B A B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B A C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B B C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B C A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B C B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B C C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND C B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND C B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND C B C)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND A (REPEAT B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (REPEAT C A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (REPEAT C B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (REPEAT C C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT (APPEND B C) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT (APPEND B C) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT (APPEND B C) C)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT B (APPEND A C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT C (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT C (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT C (APPEND B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (LEN (APPEND B C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B (LEN C))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (APPEND B C)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) C)
                 (REPEAT B C)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS (APPEND B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS (APPEND B B) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS A (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS A (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS B (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (CONS B (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (LEN (APPEND B A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (LEN (APPEND B B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (APPEND B (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (APPEND B (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (CONS A B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (CONS A B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (CONS B B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (CONS B B) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (APPEND B B) B)))
 (IMPLIES (AND (TRUE-LISTP A) (NATP (APPEND A B)))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND (REPEAT B B) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (CONS A B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (CONS B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (CONS B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (LEN (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND A B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND A B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B A A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B A B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B B B)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND A (REPEAT B B))))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (REPEAT B (APPEND A B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (LEN (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (LEN A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B (LEN B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (APPEND B B)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) B)
                 (REPEAT B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS (APPEND B B) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS (APPEND B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS B (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS B (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS A (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (CONS A (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (LEN (APPEND B B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (LEN (APPEND B A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (APPEND B (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (APPEND B (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (CONS B B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS B B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (CONS B B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (CONS A B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (CONS A B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (CONS A B) A)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (APPEND B B) B)))
 (IMPLIES (AND (NATP (APPEND A B))
               (TRUE-LISTP (APPEND B B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (APPEND B B) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (TRUE-LISTP A) (NATP (APPEND A B)))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND (REPEAT B A) A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (CONS B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (CONS B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (CONS A B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (LEN (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B B A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B A B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B A A)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND A B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND A B A)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND A (REPEAT B A))))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (REPEAT B (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (APPEND B B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (LEN (APPEND B A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (LEN B))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B (LEN A))))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B B)))
 (IMPLIES (AND (NATP (APPEND A B)) (TRUE-LISTP B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (APPEND B A)))
 (IMPLIES (NATP (APPEND A B))
          (EQUAL (REPEAT (APPEND A B) A)
                 (REPEAT B A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS (APPEND A A) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS (APPEND A A) C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS (APPEND A C) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS (APPEND A C) C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS A (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS A (APPEND A C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS C (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (CONS C (APPEND A C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (LEN (APPEND A A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (LEN (APPEND A C)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (APPEND A (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (APPEND A (LEN C)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND (APPEND A C) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND (APPEND A C) C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (CONS A C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (CONS C A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (CONS C C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (LEN (LEN C)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A A C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A C A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A C C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND C A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND C A C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (REPEAT C A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (REPEAT C C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (REPEAT (APPEND A C) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (REPEAT (APPEND A C) C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (REPEAT C (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (REPEAT C (APPEND A C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (LEN (APPEND A C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (LEN A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A (LEN C))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) C)
                 (APPEND A C)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS (APPEND A A) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS (APPEND A A) B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS (APPEND A B) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS (APPEND A B) B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS A (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS A (APPEND A B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS B (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (CONS B (APPEND A B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (LEN (APPEND A A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (LEN (APPEND A B)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (APPEND A (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (APPEND A (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND (APPEND A B) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND (APPEND A B) B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (CONS A B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (CONS B A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (CONS B B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (LEN (LEN B)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A A B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A B A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A B B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND B A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND B A B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (REPEAT B A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (REPEAT B B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (REPEAT (APPEND A B) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (REPEAT (APPEND A B) B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (REPEAT B (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (REPEAT B (APPEND A B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (LEN (APPEND A B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (LEN A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A (LEN B))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) B)
                 (APPEND A B)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (CONS (APPEND A A) A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (CONS A (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (LEN (LEN (APPEND A A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (LEN (APPEND A (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (APPEND A (CONS A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (APPEND A (LEN (LEN A)))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (APPEND A A A)))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (LEN (APPEND A A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (APPEND A (LEN A))))
 (IMPLIES (AND (NATP (APPEND A A)) (TRUE-LISTP A))
          (EQUAL (REPEAT (APPEND A A) A)
                 (APPEND A A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND B A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (CONS B C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B B))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B B))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B A))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS B A))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (CONS A C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (CONS A C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS A B))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (CONS A B))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (LEN (LEN B)))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (LEN (LEN B)))
                 (APPEND (APPEND B A) B)))
 (EQUAL (REPEAT A (LEN (LEN B)))
        (REPEAT A (LEN (LEN A))))
 (IMPLIES (NATP A)
          (EQUAL (REPEAT A (LEN (LEN B)))
                 (REPEAT A (LEN A))))
 (IMPLIES (NATP A)
          (EQUAL (REPEAT A (LEN (LEN A)))
                 (REPEAT A (LEN A))))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND B A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (APPEND B C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (NATP (APPEND B A))
          (EQUAL (REPEAT A (APPEND B C))
                 (REPEAT (APPEND B A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B B))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B B))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (NATP (APPEND B A))
          (EQUAL (REPEAT A (APPEND B B))
                 (REPEAT (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B A))
                 (APPEND (APPEND B A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (APPEND B A))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (NATP (APPEND B A))
          (EQUAL (REPEAT A (APPEND B A))
                 (REPEAT (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C A) B)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C B) A)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C B) B)))
 (IMPLIES (AND (NATP B) (TRUE-LISTP (APPEND C B)))
          (EQUAL (REPEAT A (REPEAT B C))
                 (APPEND (APPEND C B) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (REPEAT A C))
                 (APPEND (APPEND C A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND C A)))
          (EQUAL (REPEAT A (REPEAT A C))
                 (APPEND (APPEND C A) C)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (REPEAT A B))
                 (APPEND (APPEND B A) A)))
 (IMPLIES (AND (NATP A) (TRUE-LISTP (APPEND B A)))
          (EQUAL (REPEAT A (REPEAT A B))
                 (APPEND (APPEND B A) B))))
